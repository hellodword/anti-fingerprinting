name: chrome on windows in docker

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - version: "124.0.6367.61"
            url: "https://dl.google.com/release2/chrome/adlnmvamzkoffwsicg4sjgtbd5na_124.0.6367.61/124.0.6367.61_chrome_installer.exe"
            hash: "8854432065ac1b88e2145fc4f90e99ea7616b3abcdff5d780a5b757a71fb0b4d"
          - version: "123.0.6312.123"
            url: "https://dl.google.com/release2/chrome/acq7ad7frffpcbzjbrwktmqa6vgq_123.0.6312.123/123.0.6312.123_chrome_installer.exe"
            hash: "f422045c867b91f97c0c91b3de550865bdf2ab1a3182ff5522c997f4f514456d"

    steps:
      - uses: actions/checkout@v4

      - name: debug
        run: |
          set -x
          df -T
          df -T `pwd`

      - uses: rokibhasansagar/slimhub_actions@a28a11a35d81967c82448c183cb17a34b7514a9a
        with:
          retain: "docker_buildkit,container_tools"

      - name: debug
        run: |
          set -x
          df -T
          df -T `pwd`

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: prepare ssh key and cert and else
        run: |
          set -x
          mkdir -p ./windows/shared/

          echo "URL=${{ matrix.url }}" >> ./windows/shared/.env
          echo "HASH=${{ matrix.hash }}" >> ./windows/shared/.env

          echo 'admin:$apr1$zyjICK.T$K6Q9fLUxiVMN2VQcUlDAI.' > ./windows/shared/.htpasswd

          curl -fsSL --output ./windows/nginx.conf https://github.com/qemus/qemu-docker/raw/master/web/nginx.conf
          sed -i '2s@^@    auth_basic "Administratorâ€™s Area";\n    auth_basic_user_file /storage/shared/.htpasswd;\n@' ./windows/nginx.conf
          head ./windows/nginx.conf

          ssh-keygen -t rsa -b 4096 -C "dockur" -f dockur-sshkey -q -N ""
          mv ./dockur-sshkey.pub ./windows/shared/
          sudo chmod 600 ./dockur-sshkey

          cp ./windows/run-chrome.ps1 ./windows/shared/

          mkdir -p ./dist/certs
          openssl req -x509 -newkey ec -pkeyopt ec_paramgen_curve:secp384r1 -days 3650 \
            -nodes -keyout ./dist/certs/tls.key -out ./dist/certs/tls.crt -subj "/CN=localhost" \
            -addext "subjectAltName=DNS:localhost,DNS:*.localhost,DNS:example.org,IP:127.0.0.1,IP:172.17.0.1"

          sudo chown 65532:65532 ./dist/certs/*
          sudo chmod 444 ./dist/certs/*

          sudo cp -r ./dist/certs ./windows/shared/

          cp ./cmd/collector/docker-compose.yml ./dist/

          mkdir -p ./dist/db
          sudo chown 65532:65532 ./dist/db

          git clone --depth 1 -b v0.42.0 https://github.com/quic-go/quic-go .3rd/quic-go
          pushd .3rd/quic-go
          git apply ../../quic-go.patch
          popd

      - name: build collector
        run: |
          go mod download
          go build -trimpath -ldflags "-s -w -buildid=" -o dist/collector ./cmd/collector

      - name: run collector
        run: |
          cd dist
          docker compose up --build -d

      - name: test collector
        run: |
          sleep 3s
          curl -v -f -k https://172.17.0.1:8443/v1/all

      - name: run windows
        run: |
          docker run -d \
            --stop-timeout 120 --name windows \
            -e MANUAL=N \
            -e VERSION=win11 \
            -v $PWD/windows/shared:/storage/shared:rw \
            -v $PWD/windows/win11x64.xml:/run/assets/win11x64.xml:ro \
            -v $PWD/windows/nginx.conf:/etc/nginx/sites-enabled/web.conf:ro \
            -p 127.0.0.1:2222:22 -p 127.0.0.1:3389:3389 -p 127.0.0.1:8006:8006 \
            --device=/dev/kvm --cap-add NET_ADMIN dockurr/windows

      - name: expose VNC
        run: |
          docker run -d --name cloudflared --network host cloudflare/cloudflared tunnel --url http://127.0.0.1:8006

      - name: wait
        run: |
          docker logs -f cloudflared &
          docker logs -f windows &

          while ! curl -s -f -k https://127.0.0.1:8443/v1/id/00000000-0000-0000-0000-000000000001 --output chrome-${{ matrix.version }}-incognito.json;
          do
            sleep 10s
          done

          while ! curl -s -f -k https://127.0.0.1:8443/v1/id/00000000-0000-0000-0000-000000000002 --output chrome-${{ matrix.version }}-normal.json;
          do
            sleep 2s
          done

          while ! curl -s -f -k https://127.0.0.1:8443/v1/id/00000000-0000-0000-0000-000000000003 --output chrome-${{ matrix.version }}-normal-nohttp2.json;
          do
            sleep 2s
          done

      - name: debug
        run: |
          set -x
          df -T
          df -T `pwd`

      - name: debug
        run: |
          set -x

          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $PWD/dockur-sshkey docker@127.0.0.1 -p 2222 ls

          docker exec windows ip a

          sudo apt-get install -y nginx

          curl -v 127.0.0.1

          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $PWD/dockur-sshkey docker@127.0.0.1 -p 2222 \
            curl.exe -v 172.17.0.1

      - uses: actions/upload-artifact@v4
        with:
          name: chrome-${{ matrix.version }}
          path: |
            chrome-*.json
